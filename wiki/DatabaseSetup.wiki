#summary Examples for setting up the database.

= Database configuration strings =

PDO requires a driver for the database. You can query whether a suitable PDO driver is installed with phpinfo.

The PDO definition must be in a file called "database.php" which is in the "settings" directory. That file should also contain a function called _quotestring_ that escapes or "quotes" special characters in a string.

Below are a few examples.

== !MySql ==

{{{
$db = new PDO('mysql:host=hostname; dbname=sphider', 'username', 'password');
$table_prefix = "";
}}}

The hostname, username and password need to be filled in in this query.

The function to _escape_ special characters can simply be _mysql_real_escape_string_.

{{{
function quotestring($str) {
    return mysql_real_escape_string($str);
}
}}}

== SQLite 3 ==

{{{
$db = new PDO('sqlite:'.dirname(__FILE__).'/../sphider.sqlite');
$table_prefix = "";
}}}

For SQLite, I recommend a _quotestring_ function similar to:

{{{
function quotestring($str) {
    $search  = array('"'     , "'"    , '<'   , '>'    );
    $replace = array('&quot;', '&#39;', '&lt;', '&gt;' );
    $str = str_replace($search, $replace, $str);
    return $str;
}
}}}

The SQLite database does not support the "soundex" function. In the configuration, you should therefore set the variable `$soundex_available` to zero (in the file `conf.php`).

== SQLite 2 ==

{{{
$db = new PDO('sqlite2:'.dirname(__FILE__).'/../sphider.sqlite');
$table_prefix = "";
}}}

You can used the same _quotestring_ function as for SQLite 3.